<j:jelly xmlns:j="jelly:core" xmlns:st="jelly:stapler" xmlns:d="jelly:define" xmlns:l="/lib/layout" xmlns:t="/lib/hudson" xmlns:f="/lib/form">
  <st:documentation>
    Configures a execution from Execution definitions of the same project on Borland's SilkCentral Testmanager.
    <st:attribute name="execDefIds" use="required"/>
    <st:attribute name="projectId" use="required"/>
  </st:documentation>
  <f:entry title="${%SCTMExecutor.projectConf.property.label.projectId}" help="/plugin/SCTMExecutor/help-projectid.html">
    <f:textbox field="projectId" value="${instance.projectId}" />
  </f:entry>
  <f:entry title="${%SCTMExecutor.projectConf.property.label.execDefId}" help="/plugin/SCTMExecutor/help-execdefid.html">
    <f:textbox field="execDefIds" value="${instance.execDefIds}" />
  </f:entry>    
  <f:advanced>
    <f:entry title="${%SCTMExecutor.projectConf.property.label.params}" help="/plugin/SCTMExecutor/help-params.html">
      <f:textarea field="params" value="${instance.params}" />
    </f:entry>    
    <f:entry title="${%SCTMExecutor.projectConf.property.label.startDelay}" help="/plugin/SCTMExecutor/help-startDelay.html">
      <f:textbox field="delay" value="${h.defaulted(instance.delay, 0)}" />
    </f:entry>    
    <f:entry title="${%SCTMExecutor.projectConf.property.label.contOnErr}" help="/plugin/SCTMExecutor/help-contAfterErr.html">
      <f:checkbox field="continueOnError" value="${instance.continueOnError}" />
    </f:entry>
    <f:entry title="${%SCTMExecutor.projectConf.property.label.colResult}" help="/plugin/SCTMExecutor/help-collectResults.html">
      <f:checkbox field="collectResults" value="${instance.collectResults}" />
    </f:entry>
    <f:entry title="${%SCTMExecutor.projectConf.property.label.ignoreSetupCleanup}" help="/plugin/SCTMExecutor/help-ignoreSetupCleanup.html">
      <f:checkbox field="ignoreSetupCleanup" value="${instance.ignoreSetupCleanup}" />
    </f:entry>      
        
    <f:dropdownList name="buildNumberUsageOption" title="${%SCTMExecutor.projectConf.property.label.bnusage.title}" help="/plugin/SCTMExecutor/help-buildnumberusage.html">
      <!-- uses "staplerClass" parameter as a workaround to get value property of the dropdownList. See issue "JENKINS-7517" -->
      <f:dropdownListBlock title="${%SCTMExecutor.projectConf.property.label.bnusage.dontcare}" value="1" selected="${instance.buildNumberUsageOption=='1'}" staplerClass="1"/>
      <f:dropdownListBlock title="${%SCTMExecutor.projectConf.property.label.bnusage.lastSctmBuild}" value="4" selected="${instance.buildNumberUsageOption=='4'}" staplerClass="4"/>
      <f:dropdownListBlock title="${%SCTMExecutor.projectConf.property.label.bnusage.usemynumber}" value="2" selected="${instance.buildNumberUsageOption=='2'}" staplerClass="2"/>
      <f:dropdownListBlock title="${%SCTMExecutor.projectConf.property.label.bnusage.upstream}" value="3" selected="${instance.buildNumberUsageOption=='3'}" staplerClass="3">
        <f:entry name="jobName" field="jobName" title="${%SCTMExecutor.projectConf.property.label.bnusage.upstreamjob}">
          <j:set var="allJobNames" value="${descriptor.getAllJobs()}"/>
          <select name="jobName" >
            <j:forEach var="job" items="${allJobNames}">
              <f:option selected="${instance.jobName==job}">${job}</f:option>
            </j:forEach>
          </select>
        </f:entry>      
      </f:dropdownListBlock>
      <f:dropdownListBlock title="${%SCTMExecutor.projectConf.property.label.bnusage.customSctmBuild}" value="5" selected="${instance.buildNumberUsageOption=='5'}" staplerClass="5">
        <f:entry title="${%SCTMExecutor.projectConf.property.label.bnusage.customBuildNumber}">
          <f:textbox field="customBuildNumber" value="${instance.customBuildNumber}" />
        </f:entry>
      </f:dropdownListBlock>
    </f:dropdownList>    
  </f:advanced>  
</j:jelly>